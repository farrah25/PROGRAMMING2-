/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package assignment3;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class MobileSystem extends javax.swing.JFrame {

ArrayList<Mobile> list;
String header[] = new String[]{"Name", "No I/C", "Phone No", "Gender", "Address", "Type"};
DefaultTableModel table;
int row, col;

    public MobileSystem() {
        initComponents();
        list = new ArrayList<>();
        table = new DefaultTableModel(header, 0);
        jTableMobile.setModel(table);
        jTableMobile.setModel(table);
        display();
        this.setLocationRelativeTo(null);       
    }
    
    public void saveToFile() {
        String filePath = "List.txt";
        File file = new File(filePath);

        try {
            FileWriter fw = new FileWriter(file);
            BufferedWriter bw = new BufferedWriter(fw);

            for (int i = 0; i < jTableMobile.getRowCount(); i++) {
                for (int j = 0; j < jTableMobile.getColumnCount(); j++) {
                    bw.write(jTableMobile.getValueAt(i, j).toString() + ",");
                }
                bw.newLine();
            }
            bw.close();
            fw.close();

        } catch (IOException ex) {
            Logger.getLogger(MobileSystem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

        public void display() {
        double total = 0;
        table.setRowCount(0);
        for (int i = 0; i < list.size(); i++) {
            Object[] obj = {list.get(i).name, list.get(i).noIC, list.get(i).phoneNo, list.get(i).gender, list.get(i).address, list.get(i).type};
            table.addRow(obj);

            saveToFile();
            }
        }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jLabelClose = new javax.swing.JLabel();
        jLabel = new javax.swing.JLabel();
        jLabelMin = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jTextFieldName = new javax.swing.JTextField();
        jLabelBack = new javax.swing.JLabel();
        jTextFieldPhone = new javax.swing.JTextField();
        jButtonAdd = new javax.swing.JButton();
        jLabelName = new javax.swing.JLabel();
        jLabelAddress = new javax.swing.JLabel();
        jLabelMobile = new javax.swing.JLabel();
        jComboBoxGender = new javax.swing.JComboBox<>();
        jButtonUpdate = new javax.swing.JButton();
        jButtonSearch = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jLabelPhone = new javax.swing.JLabel();
        jLabelNoIC = new javax.swing.JLabel();
        jTextFieldIC = new javax.swing.JTextField();
        jTextFieldAddress = new javax.swing.JTextField();
        jLabelGender = new javax.swing.JLabel();
        jComboBoxType = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableMobile = new javax.swing.JTable();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(248, 145, 6));

        jLabelClose.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelClose.setForeground(new java.awt.Color(255, 255, 255));
        jLabelClose.setText("X");
        jLabelClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelCloseMouseClicked(evt);
            }
        });

        jLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel.setForeground(new java.awt.Color(255, 255, 255));
        jLabel.setText("WELCOME TO MOBILE TELECOMMUNICATION SYSTEM");

        jLabelMin.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelMin.setForeground(new java.awt.Color(255, 255, 255));
        jLabelMin.setText(" -");
        jLabelMin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelMin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelMinMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(334, 334, 334)
                .addComponent(jLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 358, Short.MAX_VALUE)
                .addComponent(jLabelMin, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelClose, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelMin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelClose))
                    .addComponent(jLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE))
                .addContainerGap())
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 1240, 70);

        jPanel2.setBackground(new java.awt.Color(44, 62, 80));

        jTextFieldName.setBackground(new java.awt.Color(108, 122, 137));
        jTextFieldName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextFieldName.setForeground(new java.awt.Color(255, 255, 255));
        jTextFieldName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNameActionPerformed(evt);
            }
        });

        jLabelBack.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelBack.setForeground(new java.awt.Color(255, 255, 255));
        jLabelBack.setText("         BACK");
        jLabelBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelBackMouseClicked(evt);
            }
        });

        jTextFieldPhone.setBackground(new java.awt.Color(108, 122, 137));
        jTextFieldPhone.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextFieldPhone.setForeground(new java.awt.Color(255, 255, 255));
        jTextFieldPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPhoneActionPerformed(evt);
            }
        });

        jButtonAdd.setBackground(new java.awt.Color(0, 128, 0));
        jButtonAdd.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonAdd.setForeground(new java.awt.Color(255, 255, 255));
        jButtonAdd.setText("ADD");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jLabelName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelName.setForeground(new java.awt.Color(255, 255, 255));
        jLabelName.setText("Name:");

        jLabelAddress.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelAddress.setForeground(new java.awt.Color(255, 255, 255));
        jLabelAddress.setText("Address:");

        jLabelMobile.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelMobile.setForeground(new java.awt.Color(255, 255, 255));
        jLabelMobile.setText("Type Mobile:");

        jComboBoxGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        jComboBoxGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxGenderActionPerformed(evt);
            }
        });

        jButtonUpdate.setBackground(new java.awt.Color(128, 0, 128));
        jButtonUpdate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonUpdate.setForeground(new java.awt.Color(255, 255, 255));
        jButtonUpdate.setText("UPDATE");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jButtonSearch.setBackground(new java.awt.Color(128, 128, 0));
        jButtonSearch.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonSearch.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSearch.setText("SEARCH");
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        jButtonSave.setBackground(new java.awt.Color(34, 167, 240));
        jButtonSave.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonSave.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSave.setText("SAVE");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jButtonDelete.setBackground(new java.awt.Color(255, 0, 0));
        jButtonDelete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonDelete.setForeground(new java.awt.Color(255, 255, 255));
        jButtonDelete.setText("DELETE");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jLabelPhone.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelPhone.setForeground(new java.awt.Color(255, 255, 255));
        jLabelPhone.setText("PhoneNum:");

        jLabelNoIC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelNoIC.setForeground(new java.awt.Color(255, 255, 255));
        jLabelNoIC.setText("No I/C:");

        jTextFieldIC.setBackground(new java.awt.Color(108, 122, 137));
        jTextFieldIC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextFieldIC.setForeground(new java.awt.Color(255, 255, 255));
        jTextFieldIC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldICActionPerformed(evt);
            }
        });

        jTextFieldAddress.setBackground(new java.awt.Color(108, 122, 137));
        jTextFieldAddress.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextFieldAddress.setForeground(new java.awt.Color(255, 255, 255));
        jTextFieldAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldAddressActionPerformed(evt);
            }
        });

        jLabelGender.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelGender.setForeground(new java.awt.Color(255, 255, 255));
        jLabelGender.setText("Gender:");

        jComboBoxType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CELCOM", "DIGI", "MAXIS" }));
        jComboBoxType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxTypeActionPerformed(evt);
            }
        });

        jTableMobile.setBackground(new java.awt.Color(0, 128, 128));
        jTableMobile.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTableMobile.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Name", "No I/C", "PhoneNum", "Gender", "Address", "TypeMobile"
            }
        ));
        jTableMobile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMobileMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableMobile);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabelNoIC, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabelPhone, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE))
                            .addComponent(jLabelName, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldIC, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonDelete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButtonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jComboBoxType, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelMobile)
                                    .addComponent(jLabelGender, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBoxGender, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jButtonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 707, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(88, 88, 88))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelBack, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(96, 96, 96))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(jButtonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelName, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(105, 105, 105)
                        .addComponent(jLabelBack, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelNoIC, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldIC, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelGender, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxGender, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelMobile, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxType, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(63, 63, 63)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonAdd)
                            .addComponent(jButtonDelete))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonSearch)
                            .addComponent(jButtonUpdate))
                        .addGap(34, 34, 34)
                        .addComponent(jButtonSave)
                        .addGap(122, 122, 122))))
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 70, 1240, 730);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabelCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCloseMouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabelCloseMouseClicked

    private void jLabelMinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelMinMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jLabelMinMouseClicked

    private void jTextFieldNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNameActionPerformed

    private void jLabelBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelBackMouseClicked
        Menu mn = new Menu();
        mn.setVisible(true);
        mn.pack();
        mn.setLocationRelativeTo(null);
        mn.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_jLabelBackMouseClicked

    private void jTextFieldPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPhoneActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        String name = jTextFieldName.getText();
        int noIC = Integer.parseInt(jTextFieldIC.getText());
        int phoneNo = Integer.parseInt(jTextFieldPhone.getText());
        String gender = jComboBoxGender.getSelectedItem().toString();
        String address = jTextFieldAddress.getText();
        String type = jComboBoxType.getSelectedItem().toString();
        list.add(new Mobile(name,noIC,phoneNo,gender,address,type));
        table.setRowCount(0); //reset data model
        
        for (int i=0; i<list.size(); i++){
            Object[] obj = {list.get(i).name,list.get(i).noIC,list.get(i).phoneNo,list.get(i).gender,list.get(i).address,list.get(i).type};
            table.addRow(obj); 
            display();
        }
        clearField(); //reset
    }//GEN-LAST:event_jButtonAddActionPerformed
      
    private void clearField(){
        jTextFieldName.requestFocus();
        jTextFieldName.setText("");
        jTextFieldIC.setText("");
        jTextFieldPhone.setText("");
        jComboBoxGender.setSelectedItem(0);
        jTextFieldAddress.setText("");
        jComboBoxType.setSelectedItem(0);
    }
    
        /*String name = jTextFieldName.getText();
        int noIC = Integer.parseInt(jTextFieldIC.getText());
        int phoneNo = Integer.parseInt(jTextFieldPhone.getText());
        String gender = jComboBoxGender.getSelectedItem().toString();
        String address = jTextFieldAddress.getText();
        String type = jComboBoxType.getSelectedItem().toString();
        list.add(new Mobile(name,noIC,phoneNo,gender,address,type));
        table.setRowCount(0); 
        if(name.equals("") || noIC==0){
            JOptionPane.showMessageDialog(this, "Please Enter All Data.");
        }
        else{
            String content[] ={jTextFieldName.getText(),Integer.parseInt(jTextFieldIC.getText()),Integer.parseInt(jTextFieldPhone.getText()),(String)jComboBoxGender.getSelectedItem(),jTextFieldAddress.getText(),(String)jComboBoxType.getSelectedItem()};
            DefaultTableModel table=(DefaultTableModel)jTableMobile.getModel();
            table.addRow(content);
            jTextFieldName.setText("");
            Integer.parseInt(jTextFieldIC.getText();
            Integer.parseInt(jTextFieldPhone.getText();
            jComboBoxGender.setSelectedIndex(0);
            jTextFieldAddress.setText("");
            jComboBoxType.setSelectedIndex(0);
        }

   
        try{
            String name = jTxtFieldDate.getText();
            int ic = jTextFieldIC.getText();
            int phone = jTextFieldPhone.getText();
            String gender = (String) jComboBoxReason.getSelectedItem();
            String address = jTxtFieldAddress.getText();
            String type = (String) jComboBoxType.getSelectedItem();
            int list;

        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Data successfully added.");
        }*/
        
    private void jComboBoxGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxGenderActionPerformed

    }//GEN-LAST:event_jComboBoxGenderActionPerformed

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        // TODO add your handling code here:
        
        //try{
            if (jTextFieldName.getText().isEmpty() || jTextFieldIC.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please Select Data!");
        } else {
            row = jTableMobile.getSelectedRow();
            list.get(row).setName(jTextFieldName.getText().trim());
            list.get(row).setNoIC(Integer.parseInt(jTextFieldIC.getText().trim()));
            list.get(row).setPhoneNo(Integer.parseInt(jTextFieldPhone.getText().trim()));
            list.get(row).setGender((String) jComboBoxGender.getSelectedItem());
            list.get(row).setAddress(jTextFieldAddress.getText().trim());
            list.get(row).setType((String) jComboBoxType.getSelectedItem());
            list.get(row).setName(jTextFieldName.getText().trim());
            display(); 

        //}catch(Exception e){
            JOptionPane.showMessageDialog(null, "Data successfully updated");
        }

        
        /*String updatedname = jTextFieldName.getText();
        int updatednoIC = Integer.parseInt(jTextFieldIC.getText());
        int updatedphone = Integer.parseInt(jTextFieldPhone.getText());
        String updatedgender = jComboBoxGender.getSelectedItem().toString();
        String updatedaddress = jTextFieldAddress.getText();
        String updatedtype = jComboBoxType.getSelectedItem().toString();
        list.get(row).name = updatedname;
        list.get(row).noIC = updatednoIC;
        list.get(row).phoneNo = updatedphone;
        list.get(row).gender = updatedgender;
        list.get(row).address = updatedaddress;
        list.get(row).type = updatedtype;
        table.setRowCount(0); //reset data model
        
        for (int i=0; i<list.size(); i++){
            Object[] obj = {list.get(i).name,list.get(i).noIC,list.get(i).phoneNo,list.get(i).gender,list.get(i).address,list.get(i).type};
            table.addRow(obj); 
        }*/
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        // TODO add your handling code here:
        String input = JOptionPane.showInputDialog(this, "Search Mobile Name:");
        for (int i=0; i<list.size(); i++){
            if (list.get(i).name.equalsIgnoreCase(input)){
                JOptionPane.showMessageDialog(jButtonSearch, "Search found!", "Search Mobile", 2);
                jTextFieldName.setText(list.get(i).name);
                Integer.parseInt(jTextFieldIC.getText());
                Integer.parseInt(jTextFieldPhone.getText());
                String gender = list.get(i).gender;
                String address = list.get(i).address;
                String type = list.get(i).type;
                
                for (int j=0; j<jComboBoxType.getItemCount(); j++){
                    if (jComboBoxType.getItemAt(i).equalsIgnoreCase(type)){
                        jComboBoxType.setSelectedIndex(i);
                    }
                }
                return;  //quit after found

            }
        }
        JOptionPane.showMessageDialog(jButtonSearch, "Search not found!", "Search Mobile",2);
    }//GEN-LAST:event_jButtonSearchActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        // TODO add your handling code here:
        //exception handling

        String filePath = "List.txt";
        File file = new File(filePath);

        try {
            FileWriter fw = new FileWriter(file);
            BufferedWriter bw = new BufferedWriter(fw);

            for (int i = 0; i < jTableMobile.getRowCount(); i++) {
                for (int j = 0; j < jTableMobile.getColumnCount(); j++) {
                    bw.write(jTableMobile.getValueAt(i, j).toString() + ",");
                }
                bw.newLine();
            }
            bw.close();
            fw.close();

        } catch (IOException ex) {
            Logger.getLogger(MobileSystem.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        // TODO add your handling code here:
        int index = jTableMobile.getSelectedRow();
        int option = JOptionPane.showConfirmDialog(this, "Are you sure want to remove?", "DELETE", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (option == JOptionPane.YES_OPTION) {
            table.removeRow(index);
            list.remove(index);
            display();
            //clearText();
            JOptionPane.showMessageDialog(null, "Successfully deleted.");
        } else if (option == JOptionPane.NO_OPTION) {
            display();
            System.out.println("Selected data is not removed.");
        } else if (option == JOptionPane.CLOSED_OPTION) {
            display();
            System.out.println("Cancel remove.");
        }
    
        
        /*int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this, "Are you sure want to remove?", "DELETE", dialogButton);
        if(dialogResult == 0){
            table.removeRow(row);
            list.remove(row);
            table.setRowCount(0); //reset table and populate again with mobileList
        for (int i=0; i<list.size(); i++){
            Object[] obj = {list.get(i).name,list.get(i).noIC,list.get(i).phoneNo,list.get(i).gender,list.get(i).address,list.get(i).type};
            table.addRow(obj); 
        }
        clearField(); //reset    
        } else {
            int dialogResult1 = JOptionPane.showConfirmDialog(this, "Please delete this data.", "This list is detected are same.", dialogButton);
        }*/
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jTextFieldICActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldICActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldICActionPerformed

    private void jTextFieldAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldAddressActionPerformed

    private void jComboBoxTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxTypeActionPerformed

    private void jTableMobileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMobileMouseClicked
        // TODO add your handling code here:
        row = jTableMobile.getSelectedRow();
        col = jTableMobile.getColumnCount();
        System.out.println(row + "," + col);
        jTextFieldName.setText(table.getValueAt(row, 0).toString());
        jTextFieldIC.setText(table.getValueAt(row, 1).toString());
        jTextFieldPhone.setText(table.getValueAt(row, 2).toString());
        String gender = table.getValueAt(row, 3).toString();
        jTextFieldAddress.setText(table.getValueAt(row, 4).toString());
        String type = table.getValueAt(row, 5).toString();
        
        for (int i=0; i<(jComboBoxType.getItemCount()); i++){
            if (jComboBoxType.getItemAt(i).equalsIgnoreCase(type)){
                jComboBoxType.setSelectedIndex(i);
            }        
       }
        
        /*String nm = table.getValueAt(jTableMobile.getSelectedRow(), 0).toString();
        String ic = table.getValueAt(jTableMobile.getSelectedRow(), 1).toString();
        String phone = table.getValueAt(jTableMobile.getSelectedRow(), 2).toString();
        String gen = table.getValueAt(jTableMobile.getSelectedRow(), 3).toString();
        String add = table.getValueAt(jTableMobile.getSelectedRow(), 4).toString();
        String type = table.getValueAt(jTableMobile.getSelectedRow(), 5).toString();
        jTextFieldName.setText(nm);
        jTextFieldIC.setText(ic);
        jTextFieldPhone.setText(phone);
        jComboBoxGender.setSelectedItem(gen);
        jTextFieldAddress.setText(add);
        jComboBoxType.setSelectedItem(type);*/

    }//GEN-LAST:event_jTableMobileMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MobileSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MobileSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MobileSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MobileSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MobileSystem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JComboBox<String> jComboBoxGender;
    private javax.swing.JComboBox<String> jComboBoxType;
    private javax.swing.JLabel jLabel;
    private javax.swing.JLabel jLabelAddress;
    private javax.swing.JLabel jLabelBack;
    private javax.swing.JLabel jLabelClose;
    private javax.swing.JLabel jLabelGender;
    private javax.swing.JLabel jLabelMin;
    private javax.swing.JLabel jLabelMobile;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JLabel jLabelNoIC;
    private javax.swing.JLabel jLabelPhone;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableMobile;
    private javax.swing.JTextField jTextFieldAddress;
    private javax.swing.JTextField jTextFieldIC;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JTextField jTextFieldPhone;
    // End of variables declaration//GEN-END:variables


}
